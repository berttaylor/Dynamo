# Generated by Django 3.2.9 on 2021-11-14 11:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.utils
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('collaborations', '0003_auto_20211114_1150'),
    ]

    operations = [
        migrations.CreateModel(
            name='CollaborationElement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('position', models.PositiveSmallIntegerField(help_text='The position of the element (1 = 1st)')),
                ('type', models.CharField(choices=[('Task', 'Task'), ('Milestone', 'Milestone')], default='Task', help_text='The type of the element', max_length=50)),
                ('name', models.CharField(help_text="A name for the task/milestone e.g. 'Make Contact with the Town Council / Stage 1 complete'", max_length=100)),
                ('description', models.TextField(blank=True, default='No further details given.', help_text='A further description of the task and what is required', max_length=500)),
                ('milestone_target', models.DateTimeField(help_text='A date by which the group should aim to reach this milestone')),
                ('completed_at', models.DateTimeField(blank=True, help_text='Timestamp of when this task was completed.', null=True)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='User who should complete the task', null=True, on_delete=models.SET(users.utils.get_sentinel_user), related_name='tasks_assigned', to=settings.AUTH_USER_MODEL)),
                ('collaboration', models.ForeignKey(help_text='The Collaboration this element belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='collaborations.collaboration')),
                ('completed_by', models.ForeignKey(blank=True, help_text='User who completed the task/reached the milestone', null=True, on_delete=models.SET(users.utils.get_sentinel_user), related_name='tasks_completed', to=settings.AUTH_USER_MODEL)),
                ('prerequisites', models.ManyToManyField(blank=True, help_text='Tasks that must be completed before this task', related_name='dependant_tasks', to='collaborations.CollaborationElement')),
                ('task_tags', models.ManyToManyField(blank=True, help_text="Tags showing certain properties that relate to multiple tasks e.g. 'Admin Task'", related_name='tasks', to='collaborations.CollaborationTaskTag')),
            ],
            options={
                'verbose_name_plural': 'Elements',
            },
        ),
        migrations.AddIndex(
            model_name='collaborationelement',
            index=models.Index(fields=['collaboration', 'position'], name='collaborati_collabo_ec7c42_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationelement',
            index=models.Index(fields=['collaboration'], name='collaborati_collabo_0a03cc_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationelement',
            index=models.Index(fields=['position'], name='collaborati_positio_663443_idx'),
        ),
    ]
