# Generated by Django 3.2.8 on 2021-11-04 22:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('groups', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('name', models.CharField(help_text="Give the Collaboration a name e.g. 'Charity Bake Sale'", max_length=100)),
                ('slug', models.SlugField(blank=True, help_text='Auto-generated slug for the Collaboration', max_length=150)),
                ('description', models.TextField(blank=True, help_text='Further details can be provided here', max_length=500, null=True)),
                ('status', models.CharField(choices=[('Planning', 'Planning'), ('Ongoing', 'Ongoing'), ('Completed', 'Completed')], default='Planning', help_text='The status of the collaboration', max_length=50)),
                ('completed', models.BooleanField(default=False, help_text='whether or not the collaboration has been completed')),
                ('completed_at', models.DateTimeField(blank=True, help_text='Timestamp of when this collaboration was completed.', null=True)),
            ],
            options={
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='CollaborationChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('message', models.TextField(help_text='The message itself')),
            ],
            options={
                'verbose_name_plural': 'Collaboration Chat Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CollaborationElement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('position', models.PositiveSmallIntegerField(help_text='The position of the element (1 = 1st)')),
                ('type', models.CharField(choices=[('Task', 'Task'), ('Milestone', 'Milestone')], default='Task', help_text='The type of the element', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Elements',
            },
        ),
        migrations.CreateModel(
            name='CollaborationFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('name', models.CharField(help_text="A name for the file e.g 'A4 Poster V1'", max_length=50)),
                ('format', models.CharField(choices=[('.pdf', '.pdf'), ('.ppt', '.ppt'), ('.doc/doc', '.doc/doc'), ('.txt', '.txt')], help_text='The format of the file', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Collaboration Files',
            },
        ),
        migrations.CreateModel(
            name='CollaborationMilestone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('name', models.CharField(help_text="A name for the milestone e.g. 'Stage 1 Initial testing complete!'", max_length=100)),
                ('reached', models.BooleanField(default=False, help_text='Whether or not the milestone has been reached')),
                ('reached_at', models.DateTimeField(blank=True, help_text='Timestamp of when this milestone was reached.', null=True)),
                ('aim_to_complete_by', models.DateTimeField(help_text='A date by which the group should aim to reach this milestone')),
            ],
            options={
                'verbose_name_plural': 'Milestones',
            },
        ),
        migrations.CreateModel(
            name='CollaborationTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('name', models.CharField(help_text="A name for the task e.g. 'Make Contact with the Town Council'", max_length=100)),
                ('description', models.TextField(blank=True, default='No further details given.', help_text='A further description of the task and what is required', max_length=500)),
                ('completed', models.BooleanField(default=False, help_text='Whether or not the task has been completed')),
                ('completed_at', models.DateTimeField(blank=True, help_text='Timestamp of when this task was completed.', null=True)),
            ],
            options={
                'verbose_name_plural': 'Tasks',
            },
        ),
        migrations.CreateModel(
            name='CollaborationTaskTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('name', models.CharField(help_text="A name for the Tag e.g. 'Task for Admin'", max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Task Tags',
            },
        ),
        migrations.AddIndex(
            model_name='collaborationtasktag',
            index=models.Index(fields=['created_at'], name='collaborati_created_ccdd59_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationtasktag',
            index=models.Index(fields=['name'], name='collaborati_name_b0d1d7_idx'),
        ),
        migrations.AddField(
            model_name='collaborationtask',
            name='assigned_to',
            field=models.ForeignKey(help_text='User who should complete the task', on_delete=models.SET(users.utils.get_sentinel_user), related_name='tasks_assigned', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collaborationtask',
            name='completed_by',
            field=models.ForeignKey(help_text='User who completed the task', on_delete=models.SET(users.utils.get_sentinel_user), related_name='tasks_completed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collaborationtask',
            name='created_by',
            field=models.ForeignKey(help_text='User who created the task', on_delete=models.SET(users.utils.get_sentinel_user), related_name='tasks_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collaborationtask',
            name='element',
            field=models.OneToOneField(help_text='The element this Task belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='task', to='collaborations.collaborationelement'),
        ),
        migrations.AddField(
            model_name='collaborationtask',
            name='files',
            field=models.ManyToManyField(help_text='Files that are connected to a task', related_name='tasks', to='collaborations.CollaborationFile'),
        ),
        migrations.AddField(
            model_name='collaborationtask',
            name='prerequisite_tasks',
            field=models.ManyToManyField(help_text='Tasks that must be completed before this task', related_name='dependant_tasks', to='collaborations.CollaborationTask'),
        ),
        migrations.AddField(
            model_name='collaborationtask',
            name='tags',
            field=models.ManyToManyField(help_text="Tags showing certain properties that relate to multiple tasks e.g. 'Admin Task'", related_name='tasks', to='collaborations.CollaborationTaskTag'),
        ),
        migrations.AddField(
            model_name='collaborationmilestone',
            name='element',
            field=models.OneToOneField(help_text='The element this milestone belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='milestone', to='collaborations.collaborationelement'),
        ),
        migrations.AddField(
            model_name='collaborationfile',
            name='collaboration',
            field=models.ForeignKey(help_text='The Collaboration this file belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='files', to='collaborations.collaboration'),
        ),
        migrations.AddField(
            model_name='collaborationelement',
            name='collaboration',
            field=models.ForeignKey(help_text='The Collaboration this element belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='collaborations.collaboration'),
        ),
        migrations.AddField(
            model_name='collaborationchatmessage',
            name='collaboration',
            field=models.ForeignKey(help_text='The Collaboration this message belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to='collaborations.collaboration'),
        ),
        migrations.AddField(
            model_name='collaborationchatmessage',
            name='user',
            field=models.ForeignKey(help_text='User who wrote the message', on_delete=models.SET(users.utils.get_sentinel_user), related_name='collaboration_chat_messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collaboration',
            name='created_by',
            field=models.ForeignKey(help_text='User who created the collaboration', on_delete=models.SET(users.utils.get_sentinel_user), related_name='collaborations_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collaboration',
            name='related_group',
            field=models.ForeignKey(help_text='The Group this collaboration belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='collaborations', to='groups.group'),
        ),
        migrations.AddIndex(
            model_name='collaborationtask',
            index=models.Index(fields=['created_at'], name='collaborati_created_8d209b_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationtask',
            index=models.Index(fields=['name'], name='collaborati_name_520d2d_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationmilestone',
            index=models.Index(fields=['created_at'], name='collaborati_created_059452_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationmilestone',
            index=models.Index(fields=['name'], name='collaborati_name_665481_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationfile',
            index=models.Index(fields=['created_at'], name='collaborati_created_3e759b_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationfile',
            index=models.Index(fields=['collaboration'], name='collaborati_collabo_4497df_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationfile',
            index=models.Index(fields=['name'], name='collaborati_name_4d1cd3_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationelement',
            index=models.Index(fields=['collaboration', 'position'], name='collaborati_collabo_ec7c42_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationelement',
            index=models.Index(fields=['collaboration'], name='collaborati_collabo_0a03cc_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationelement',
            index=models.Index(fields=['position'], name='collaborati_positio_663443_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationchatmessage',
            index=models.Index(fields=['created_at'], name='collaborati_created_d6ec48_idx'),
        ),
        migrations.AddIndex(
            model_name='collaboration',
            index=models.Index(fields=['created_at'], name='collaborati_created_33e1c0_idx'),
        ),
        migrations.AddIndex(
            model_name='collaboration',
            index=models.Index(fields=['name'], name='collaborati_name_ad6d7d_idx'),
        ),
        migrations.AddIndex(
            model_name='collaboration',
            index=models.Index(fields=['slug'], name='collaborati_slug_174615_idx'),
        ),
    ]
