# Generated by Django 3.2.8 on 2021-11-04 22:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('name', models.CharField(help_text="A name for the group e.g. 'Riverdale Parents Group'", max_length=100)),
                ('slug', models.SlugField(blank=True, help_text='Auto-generated slug for the Group', max_length=150)),
                ('description', models.TextField(blank=True, help_text="A description of the group and it's causes", max_length=500, null=True)),
                ('admins', models.ManyToManyField(help_text='Users with Administrative Rights', related_name='admin_positions', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(help_text='User who created the group', on_delete=models.SET(users.utils.get_sentinel_user), related_name='groups_created', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(help_text='Users who are members of the Group', related_name='memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='GroupProfileImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('alt_text', models.CharField(help_text='The full alt text of the image for accessibility purposes.', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Group Images',
            },
        ),
        migrations.CreateModel(
            name='GroupJoinRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('status', models.CharField(blank=True, choices=[('Request Pending', 'Request Pending'), ('Request Approved', 'Request Approved'), ('Request Denied', 'Request Denied')], default='Request Pending', help_text='The status of the request', max_length=100)),
                ('handled_date', models.DateTimeField(blank=True, help_text='Timestamped when the request is handled', null=True)),
                ('group', models.ForeignKey(help_text='The Group which the User would like to join', on_delete=django.db.models.deletion.CASCADE, related_name='join_requests', to='groups.group')),
                ('handled_by', models.ForeignKey(help_text='User who handled the request', on_delete=models.SET(users.utils.get_sentinel_user), related_name='group_join_requests_handled', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='The User who made the request', on_delete=models.SET(users.utils.get_sentinel_user), related_name='group_join_requests_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when this object was first created.', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when this object was last updated.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when (if) this object was soft deleted.', null=True)),
                ('message', models.TextField(help_text='The message itself')),
                ('group', models.ForeignKey(help_text='The group where the message was written', on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to='groups.group')),
                ('user', models.ForeignKey(help_text='User who wrote the message', on_delete=models.SET(users.utils.get_sentinel_user), related_name='group_chat_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Group Chat Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='group',
            name='profile_image',
            field=models.OneToOneField(blank=True, help_text="An image for the Group's profile", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_group', to='groups.groupprofileimage'),
        ),
        migrations.AddField(
            model_name='group',
            name='subscribers',
            field=models.ManyToManyField(help_text='Users who receive email updates from the Group', related_name='subscriptions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='groupchatmessage',
            index=models.Index(fields=['created_at'], name='groups_grou_created_f8035c_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['created_at'], name='groups_grou_created_b17bf8_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['name'], name='groups_grou_name_0806de_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['slug'], name='groups_grou_slug_246a6a_idx'),
        ),
    ]
