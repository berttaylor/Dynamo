# Generated by Django 3.2.9 on 2021-11-21 12:25

import uuid

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Collaboration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp of when this object was first created.",
                        null=True,
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp of when this object was last updated.",
                        null=True,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp of when (if) this object was soft deleted.",
                        null=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Give the Collaboration a name e.g. 'Charity Bake Sale'",
                        max_length=100,
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="Auto-generated slug for the Collaboration",
                        max_length=150,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Further details can be provided here",
                        max_length=500,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Collaborations",
            },
        ),
        migrations.CreateModel(
            name="CollaborationFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp of when this object was first created.",
                        null=True,
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp of when this object was last updated.",
                        null=True,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp of when (if) this object was soft deleted.",
                        null=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A name for the file e.g 'A4 Poster V1'",
                        max_length=50,
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[
                            (".pdf", ".pdf"),
                            (".ppt", ".ppt"),
                            (".doc/doc", ".doc/doc"),
                            (".txt", ".txt"),
                        ],
                        help_text="The format of the file",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Files",
            },
        ),
        migrations.CreateModel(
            name="CollaborationMilestone",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp of when this object was first created.",
                        null=True,
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp of when this object was last updated.",
                        null=True,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp of when (if) this object was soft deleted.",
                        null=True,
                    ),
                ),
                (
                    "position",
                    models.PositiveSmallIntegerField(
                        help_text="The position of the element (1 = 1st)"
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        default="REF",
                        help_text="An auto-generated task reference, used to assign task as prerequisites",
                        max_length=255,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A name for the milestone e.g. 'Stage 1 Preparations complete!'",
                        max_length=100,
                    ),
                ),
                (
                    "target_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="A date by which the group should aim to reach this milestone",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Milestones",
                "ordering": ["collaboration", "position"],
            },
        ),
        migrations.CreateModel(
            name="CollaborationTask",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp of when this object was first created.",
                        null=True,
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp of when this object was last updated.",
                        null=True,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp of when (if) this object was soft deleted.",
                        null=True,
                    ),
                ),
                (
                    "position",
                    models.PositiveSmallIntegerField(
                        help_text="The position of the element (1 = 1st)"
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        default="REF",
                        help_text="An auto-generated task reference, used to assign task as prerequisites",
                        max_length=255,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A name for the task e.g. 'Make Contact with the Town Council'",
                        max_length=100,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="A further description of the task and what is required",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp of when this task was completed.",
                        null=True,
                    ),
                ),
                (
                    "completion_notes",
                    models.TextField(
                        blank=True,
                        help_text="Any information relevant to the completion of this task. ",
                        max_length=500,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Tasks",
                "ordering": ["collaboration", "position"],
            },
        ),
        migrations.CreateModel(
            name="CollaborationTaskTag",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp of when this object was first created.",
                        null=True,
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp of when this object was last updated.",
                        null=True,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp of when (if) this object was soft deleted.",
                        null=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A name for the Tag e.g. 'Task for Admin'",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Task Tags",
            },
        ),
        migrations.AddIndex(
            model_name="collaborationtasktag",
            index=models.Index(
                fields=["created_at"], name="collaborati_created_ccdd59_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="collaborationtasktag",
            index=models.Index(fields=["name"], name="collaborati_name_b0d1d7_idx"),
        ),
    ]
