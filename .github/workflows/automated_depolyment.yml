name: Automated Deployment
on: [push, pull_request]
jobs:
  test:
    name: "Test Code"
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Generate env file
        run: |
          touch .env.dev
          echo POSTGRES_DB_PORT=1000 >> .env.dev
          echo POSTGRES_DB_HOST=db >> .env.dev
          echo POSTGRES_USER=pg_user >> .env.dev
          echo POSTGRES_DB=postgres_db >> .env.dev
          echo DJANGO_SETTINGS_MODULE=collabl.settings >> .env.dev
          echo DJANGO_ALLOWED_HOSTS='localhost 127.0.0.1' >> .env.dev
          echo DJANGO_DEBUG_STATUS=True >> .env.dev
          echo SITE_PROTOCOL='http://' >> .env.dev
          echo SITE_DOMAIN='127.0.0.1:8000' >> .env.dev

      - name: Print env file
        run: |
          echo .env.dev

#  deploy:
#    name: "Deploy to prod server"
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#    needs: test
#    steps:
#      - name: Configure SSH
#        run: |
#          mkdir -p ~/.ssh/
#          echo "$SSH_KEY" > ~/.ssh/prod.key
#          chmod 600 ~/.ssh/prod.key
#          cat >>~/.ssh/config <<END
#          Host prod
#            HostName $SSH_HOST
#            User $SSH_USER
#            IdentityFile ~/.ssh/prod.key
#            StrictHostKeyChecking no
#          END
#        env:
#          SSH_USER: ${{ secrets.PROD_SSH_USER }}
#          SSH_KEY: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
#          SSH_HOST: ${{ secrets.PROD_SSH_HOST }}
#          SSH_USER_SUDO_PASS: ${{ secrets.SSH_USER_SUDO_PASS }}
#
#      - name: Check out the new files
#        run: ssh prod 'cd app && git fetch && git reset --hard origin/main'
#
#      - name: Migrate database changes
#        run: ssh prod 'cd app && make -f make-prod migrate'
#
#      - name: Rebuild docker containers
#        run: ssh prod 'cd app && sudo make -f make-prod build'
#
#      - name: Restart docker containers
#        run: ssh prod 'cd app && make -f make-prod restart'